#Creating the workbook
wb <- createWorkbook()
#Adding the worksheet
addWorksheet(wb, sheetName = "paperEnglish")
##Adding data Headers
for (i in 1:length(colnames(paperFormEnglish))){
writeData(wb, "paperEnglish", x = colnames(paperFormEnglish)[i], startRow = 1, startCol = i)
}
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,], startRow = 1 + i, col.names = F)
}
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:length(nrow(paperFormEnglish))), heights = 30)
saveWorkbook(wb, "output.xlsx", overwrite = T)
saveWorkbook(wb, "output.xlsx", overwrite = T)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:nrow(paperFormEnglish)), heights = 30)
saveWorkbook(wb, "output.xlsx", overwrite = T)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(1:nrow(paperFormEnglish)), heights = 30)
saveWorkbook(wb, "output.xlsx", overwrite = T)
nrow(paperFormEnglish)
sum(nrow(pa))
sum(nrow(paperFormEnglish) + 1)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1), heights = 30)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 30)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 30)
saveWorkbook(wb, "output.xlsx", overwrite = T)
setRowHeights(wb, sheet = "paperEnglish", rows = 1, heights = 14.40)
saveWorkbook(wb, "output.xlsx", overwrite = T)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 45)
setRowHeights(wb, sheet = "paperEnglish", rows = 1, heights = 14.40)
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 45)
saveWorkbook(wb, "output.xlsx", overwrite = T)
#Styling
columnName <- createStyle(fontName = "Arial Narrow", fontSize = 12, fontColour = "#efefef",
wrapText = T)
addStyle(wb, "paperEnglish", columnName, cols = 1, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 45)
setRowHeights(wb, sheet = "paperEnglish", rows = 1, heights = 14.40)
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 45)
saveWorkbook(wb, "output.xlsx", overwrite = T)
saveWorkbook(wb, "output.xlsx", overwrite = T)
#Styling
columnName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T)
addStyle(wb, "paperEnglish", columnName, cols = 1, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
#Styling
columnName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T, valign = "top")
addStyle(wb, "paperEnglish", columnName, cols = 1, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 45)
setRowHeights(wb, sheet = "paperEnglish", rows = 1, heights = 14.40)
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 45)
saveWorkbook(wb, "output.xlsx", overwrite = T)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = auto)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 45)
setRowHeights(wb, sheet = "paperEnglish", rows = 1, heights = 14.40)
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 45)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 50)
setRowHeights(wb, sheet = "paperEnglish", rows = 1, heights = 14.40)
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 45)
saveWorkbook(wb, "output.xlsx", overwrite = T)
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
cellRed <- createStyle(fgFill = "red")
m1 <- as.matrix(paperFormEnglish)
m1
which(m1 == "1. Basic infomration")
which(m1 == "1. Basic infomration", arr.ind = T)
View(m1)
grep("1. Basic information")
grep("1. Basic information", paperFormEnglish)
nrow(paperFormEnglish[paperFormEnglish$Name == "1. Basic information",])
addStyle(wb,sheet = "paperEnglish", rows = nrow(nrow(paperFormEnglish[paperFormEnglish$Name == "1. Basic information",])), cols = 1, gridExpand = F)
addStyle(wb,sheet = "paperEnglish",cellRed, rows = nrow(nrow(paperFormEnglish[paperFormEnglish$Name == "1. Basic information",])), cols = 1, gridExpand = F)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 50)
setRowHeights(wb, sheet = "paperEnglish", rows = 1, heights = 14.40)
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
cellRed <- createStyle(fgFill = "red")
addStyle(wb,sheet = "paperEnglish",cellRed, rows = nrow(nrow(paperFormEnglish[paperFormEnglish$Name == "1. Basic information",])), cols = 1, gridExpand = F)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 50)
setRowHeights(wb, sheet = "paperEnglish", rows = 1, heights = 14.40)
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
cellRed <- createStyle(fgFill = "red")
addStyle(wb,sheet = "paperEnglish",cellRed, rows = nrow(paperFormEnglish[paperFormEnglish$Name == "1. Basic information",]), cols = 1, gridExpand = F)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 50)
setRowHeights(wb, sheet = "paperEnglish", rows = 1, heights = 14.40)
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
##Writing to excel and styling
#Creating the workbook
wb <- createWorkbook()
#Adding the worksheet
addWorksheet(wb, sheetName = "paperEnglish")
##Adding data Headers
for (i in 1:length(colnames(paperFormEnglish))){
writeData(wb, "paperEnglish", x = colnames(paperFormEnglish)[i], startRow = 1, startCol = i)
}
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,], startRow = 1 + i, col.names = F)
}
#Styling
columnName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T, valign = "top")
addStyle(wb, "paperEnglish", columnName, cols = 1, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 50)
setRowHeights(wb, sheet = "paperEnglish", rows = 1, heights = 14.40)
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
saveWorkbook(wb, "output.xlsx", overwrite = T)
##Writing to excel and styling
#Creating the workbook
wb <- createWorkbook()
#Adding the worksheet
addWorksheet(wb, sheetName = "paperEnglish")
##Adding data Headers
for (i in 1:length(colnames(paperFormEnglish))){
writeData(wb, "paperEnglish", x = colnames(paperFormEnglish)[i], startRow = 1, startCol = i)
}
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,], startRow = 1 + i, col.names = F)
}
saveWorkbook(wb, "output.xlsx", overwrite = T)
#Styling
columnName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T, valign = "top")
addStyle(wb, "paperEnglish", columnName, cols = 1, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setRowHeights(wb, sheet = "paperEnglish", rows = c(2:sum(nrow(paperFormEnglish) + 1)), heights = 50)
setRowHeights(wb, sheet = "paperEnglish", rows = 1, heights = 14.40)
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
View(koboChoices)
View(exChoicesEnglish)
##combined table
paperFormEnglish <- exTableEnglish %>%
left_join(exChoicesEnglish, by= "Type")
View(paperFormEnglish)
##combined table
paperFormEnglish <- exTableEnglish %>%
left_join(exChoicesEnglish, by= "Type") %>%
filter(!(Type %in% c("end_group")))
if (!require("pacman")) install.packages("pacman")
pacman::p_load(sf,tidyverse, readxl, cowplot, DT, dplyr, utils, rlang,expss, ggplot2, data.table, openxlsx)
# Set directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
rm(list = ls())
##Read questions
koboQues <- read_excel("data/hsosKoboTool.xlsx", sheet = "survey")
##Read Choices
koboChoices <- read_excel("data/hsosKoboTool.xlsx", sheet = "choices")
##Creating table
exTableEnglish <- koboQues %>%
select(relevant,type,`label::english`,`hint::english`,`constraint_message::english`) %>%
rename("Type" = type, "Name" = `label::english`, "Hint" = `hint::english`, "Constraint" = `constraint_message::english`, "Relevancy" = relevant) %>%
filter(!(is.na(Name))) %>%
filter(!(Name %in% c("start","end","today"))) %>%
mutate(Type = ifelse(str_detect(Type, "select_one") == T, gsub("select_one ","",Type),
ifelse(str_detect(Type, "select_multiple") == T, gsub("select_multiple ","",Type),Type)))
##Choices table
exChoicesEnglish <- koboChoices %>%
select(list_name, `label::english`) %>%
filter(!(is.na(list_name))) %>%
group_by(list_name) %>%
summarise_all(funs(toString(na.omit(.)))) %>%
rename("Type" = list_name, "Choices English" = `label::english`)
##combined table
paperFormEnglish <- exTableEnglish %>%
left_join(exChoicesEnglish, by= "Type") %>%
filter(!(Type %in% c("end_group")))
##Writing to excel and styling
#Creating the workbook
wb <- createWorkbook()
#Adding the worksheet
addWorksheet(wb, sheetName = "paperEnglish")
##Adding data Headers
for (i in 1:length(colnames(paperFormEnglish))){
writeData(wb, "paperEnglish", x = colnames(paperFormEnglish)[i], startRow = 1, startCol = i)
}
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,], startRow = 1 + i, col.names = F)
}
#Styling
columnName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T, valign = "top")
addStyle(wb, "paperEnglish", columnName, cols = 1, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setColWidths(wb, sheet = "paperEnglish", cols = 1, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
##Column Width and Row width
setColWidths(wb, sheet = "paperEnglish", cols = 2, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
##Writing to excel and styling
#Creating the workbook
wb <- createWorkbook()
#Adding the worksheet
addWorksheet(wb, sheetName = "paperEnglish")
##Adding data Headers
for (i in 1:length(colnames(paperFormEnglish))){
writeData(wb, "paperEnglish", x = colnames(paperFormEnglish)[i], startRow = 1, startCol = i)
}
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,], startRow = 1 + i, col.names = F)
}
#Styling
columnName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T, valign = "top")
addStyle(wb, "paperEnglish", columnName, cols = 1, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setColWidths(wb, sheet = "paperEnglish", cols = 2, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
addStyle(wb, "paperEnglish", columnName, cols = 2, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setColWidths(wb, sheet = "paperEnglish", cols = 2, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
##combined table
paperFormEnglish <- exTableEnglish %>%
left_join(exChoicesEnglish, by= "Type") %>%
filter(!(Type %in% c("end_group"))) %>%
select(!c(Type))
##Writing to excel and styling
#Creating the workbook
wb <- createWorkbook()
#Adding the worksheet
addWorksheet(wb, sheetName = "paperEnglish")
##Adding data Headers
for (i in 1:length(colnames(paperFormEnglish))){
writeData(wb, "paperEnglish", x = colnames(paperFormEnglish)[i], startRow = 1, startCol = i)
}
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,], startRow = 1 + i, col.names = F)
}
#Styling
columnName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T, valign = "top")
addStyle(wb, "paperEnglish", columnName, cols = 2, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setColWidths(wb, sheet = "paperEnglish", cols = 2, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
##combined table
paperFormEnglish <- exTableEnglish %>%
left_join(exChoicesEnglish, by= "Type") %>%
filter(!(Type %in% c("end_group")))
knitr::opts_chunk$set(echo = TRUE)
file <- choose.files("Please select the Kobo tool")
##Read questions
koboQues <- read_excel(file, sheet = "survey")
##Read Choices
koboChoices <- read_excel(file, sheet = "choices")
knitr::opts_chunk$set(echo = TRUE)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(sf,tidyverse, readxl, cowplot, DT, dplyr, utils, rlang,expss, ggplot2, data.table, openxlsx)
# Set directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
rm(list = ls())
file <- choose.files("Please select the Kobo tool")
##Read questions
koboQues <- read_excel(file, sheet = "survey")
##Read Choices
koboChoices <- read_excel(file, sheet = "choices")
##Creating table
exTableEnglish <- koboQues %>%
select(type,relevant,`label::english`,`hint::english`,`constraint_message::english`) %>%
rename("Type" = type, "Name" = `label::english`, "Hint" = `hint::english`, "Constraint" = `constraint_message::english`, "Relevancy" = relevant) %>%
filter(!(is.na(Name))) %>%
filter(!(Name %in% c("start","end","today"))) %>%
mutate(Type = ifelse(str_detect(Type, "select_one") == T, gsub("select_one ","",Type),
ifelse(str_detect(Type, "select_multiple") == T, gsub("select_multiple ","",Type),Type)))
##Choices table
exChoicesEnglish <- koboChoices %>%
select(list_name, `label::english`) %>%
filter(!(is.na(list_name))) %>%
group_by(list_name) %>%
summarise_all(funs(toString(na.omit(.)))) %>%
rename("Type" = list_name, "Choices English" = `label::english`)
##combined table
paperFormEnglish <- exTableEnglish %>%
left_join(exChoicesEnglish, by= "Type") %>%
filter(!(Type %in% c("end_group")))
##Writing to excel and styling
#Creating the workbook
wb <- createWorkbook()
#Adding the worksheet
addWorksheet(wb, sheetName = "paperEnglish")
##Adding data Headers
for (i in 1:length(colnames(paperFormEnglish))){
writeData(wb, "paperEnglish", x = colnames(paperFormEnglish)[i + 1], startRow = 1, startCol = i)
}
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,2:5], startRow = 1 + i, col.names = F)
}
#Styling
columnName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T, valign = "top")
addStyle(wb, "paperEnglish", columnName, cols = 2, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setColWidths(wb, sheet = "paperEnglish", cols = 2, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
knitr::opts_chunk$set(echo = TRUE)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(sf,tidyverse, readxl, cowplot, DT, dplyr, utils, rlang,expss, ggplot2, data.table, openxlsx)
# Set directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
rm(list = ls())
file <- choose.files("Please select the Kobo tool")
##Read questions
koboQues <- read_excel(file, sheet = "survey")
##Read Choices
koboChoices <- read_excel(file, sheet = "choices")
##Creating table
exTableEnglish <- koboQues %>%
select(type,relevant,`label::english`,`hint::english`,`constraint_message::english`) %>%
rename("Type" = type, "Name" = `label::english`, "Hint" = `hint::english`, "Constraint" = `constraint_message::english`, "Relevancy" = relevant) %>%
filter(!(is.na(Name))) %>%
filter(!(Name %in% c("start","end","today"))) %>%
mutate(Type = ifelse(str_detect(Type, "select_one") == T, gsub("select_one ","",Type),
ifelse(str_detect(Type, "select_multiple") == T, gsub("select_multiple ","",Type),Type)))
##Choices table
exChoicesEnglish <- koboChoices %>%
select(list_name, `label::english`) %>%
filter(!(is.na(list_name))) %>%
group_by(list_name) %>%
summarise_all(funs(toString(na.omit(.)))) %>%
rename("Type" = list_name, "Choices English" = `label::english`)
##combined table
paperFormEnglish <- exTableEnglish %>%
left_join(exChoicesEnglish, by= "Type") %>%
filter(!(Type %in% c("end_group")))
##Writing to excel and styling
#Creating the workbook
wb <- createWorkbook()
#Adding the worksheet
addWorksheet(wb, sheetName = "paperEnglish")
##Adding data Headers
for (i in 1:length(colnames(paperFormEnglish))){
writeData(wb, "paperEnglish", x = colnames(paperFormEnglish)[i + 1], startRow = 1, startCol = i)
}
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,2:5], startRow = 1 + i, col.names = F)
}
#Styling
columnName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T, valign = "top")
addStyle(wb, "paperEnglish", columnName, cols = 2, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setColWidths(wb, sheet = "paperEnglish", cols = 2, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
as.integer(rownames(paperFormEnglish$Type == "begin_group"))
paperFormEnglish[match("begin_group",paperFormEnglish$Type),]
rownames(paperFormEnglish)
which(paperFormEnglish[paperFormEnglish$Type == "begin_group",])
paper <- paperFormEnglish %>%
rowid_to_column() %>%
filter(Type == "begin_group")
paper
rowIdSection <- paperFormEnglish %>%
rowid_to_column() %>%
filter(Type == "begin_group")
rowIdSectionList <- list(rowIdSection$rowid)
View(rowIdSectionList)
rowIdSectionList <- rowIdSection$rowid
##Merge
for (i in rowIdSectionList){
mergeCells(wb, sheet = "paperEnglish", rows = i, cols = 1:5)
}
saveWorkbook(wb, "output.xlsx", overwrite = T)
##Merge
for (i in rowIdSectionList){
mergeCells(wb, sheet = "paperEnglish", rows = i + 1, cols = 1:5)
}
##Writing t excel and styling
#Creating the workbook
wb <- createWorkbook()
#Adding the worksheet
addWorksheet(wb, sheetName = "paperEnglish")
##Adding data Headers
for (i in 1:length(colnames(paperFormEnglish))){
writeData(wb, "paperEnglish", x = colnames(paperFormEnglish)[i + 1], startRow = 1, startCol = i)
}
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,2:5], startRow = 1 + i, col.names = F)
}
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,2:5], startRow = 1 + i, col.names = F)
}
#Styling
columnName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T, valign = "top")
#Styling
styleName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T, valign = "top")
addStyle(wb, "paperEnglish", columnName, cols = 2, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setColWidths(wb, sheet = "paperEnglish", cols = 2, widths = 75)
rowIdSection <- paperFormEnglish %>%
rowid_to_column() %>%
filter(Type == "begin_group")
##Merge
for (i in rowIdSectionList){
mergeCells(wb, sheet = "paperEnglish", rows = i + 1, cols = 1:5)
}
saveWorkbook(wb, "output.xlsx", overwrite = T)
for(i in 1:nrow(rowIdSection)){
writeData(wb, sheet = "paperEnglish", rowIdSection$Name[i], startCol = 1, startRow = rowIdSection$rowid[i])
}
saveWorkbook(wb, "output.xlsx", overwrite = T)
for(i in 1:nrow(rowIdSection)){
writeData(wb, sheet = "paperEnglish", rowIdSection$Name[i], startCol = 1, startRow = rowIdSection$rowid[i + 1])
}
for(i in 1:nrow(rowIdSection)){
writeData(wb, sheet = "paperEnglish", rowIdSection$Name[i], startCol = 1, startRow = rowIdSection$rowid[i + 1])
}
for(i in 1:nrow(rowIdSection)){
writeData(wb, sheet = "paperEnglish", rowIdSection$Name[i], startCol = 1, startRow = sum(rowIdSection$rowid[i] + 1))
}
saveWorkbook(wb, "output.xlsx", overwrite = T)
for(i in 1:nrow(rowIdSection)){
writeData(wb, sheet = "paperEnglish", rowIdSection$Name[i], startCol = 1, startRow = sum(rowIdSection$rowid[i] + 1))
}
saveWorkbook(wb, "output.xlsx", overwrite = T)
##Writing t excel and styling
#Creating the workbook
wb <- createWorkbook()
#Adding the worksheet
addWorksheet(wb, sheetName = "paperEnglish")
##Adding data Headers
for (i in 1:length(colnames(paperFormEnglish))){
writeData(wb, "paperEnglish", x = colnames(paperFormEnglish)[i + 1], startRow = 1, startCol = i)
}
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,2:5], startRow = 1 + i, col.names = F)
}
#Styling
styleName <- createStyle(fontName = "Arial Narrow", fontSize = 12,
wrapText = T, valign = "top")
addStyle(wb, "paperEnglish", columnName, cols = 2, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
##Column Width and Row width
setColWidths(wb, sheet = "paperEnglish", cols = 2, widths = 75)
rowIdSection <- paperFormEnglish %>%
rowid_to_column() %>%
filter(Type == "begin_group")
rowIdSectionList <- rowIdSection$rowid
##Merge
for (i in rowIdSectionList){
mergeCells(wb, sheet = "paperEnglish", rows = i + 1, cols = 1:5)
}
for(i in 1:nrow(rowIdSection)){
writeData(wb, sheet = "paperEnglish", rowIdSection$Name[i], startCol = 1, startRow = sum(rowIdSection$rowid[i] + 1))
}
saveWorkbook(wb, "output.xlsx", overwrite = T)
for (i in rowIdSectionList){
addStyle(wb, sheet = "paperEnglish", sectionHead, rows = i + 1, cols = 1:5, gridExpand = F)
}
sectionHead <- createStyle(fontName = "Arial Narrow", fontSize = 14,
halign = "center", fgFill = "#efefef")
for (i in rowIdSectionList){
addStyle(wb, sheet = "paperEnglish", sectionHead, rows = i + 1, cols = 1:5, gridExpand = F)
}
##Column Width and Row width
setColWidths(wb, sheet = "paperEnglish", cols = 2, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
sectionHead <- createStyle(fontName = "Arial Narrow", fontSize = 14,
halign = "center", fgFill = "#efefef", textDecoration = "bold")
View(paperFormEnglish)
##Adding data table
for (i in 1:nrow(paperFormEnglish)){
writeData(wb, "paperEnglish", x = paperFormEnglish[i,2:6], startRow = 1 + i, col.names = F)
}
rowIdSection <- paperFormEnglish %>%
rowid_to_column() %>%
filter(Type == "begin_group")
rowIdSectionList <- rowIdSection$rowid
for(i in 1:nrow(rowIdSection)){
writeData(wb, sheet = "paperEnglish", rowIdSection$Name[i], startCol = 1, startRow = sum(rowIdSection$rowid[i] + 1))
}
addStyle(wb, "paperEnglish", columnName, cols = 2, rows = 2:sum(nrow(paperFormEnglish) + 1), gridExpand = T)
sectionHead <- createStyle(fontName = "Arial Narrow", fontSize = 14,
halign = "center", fgFill = "#efefef", textDecoration = "bold")
for (i in rowIdSectionList){
addStyle(wb, sheet = "paperEnglish", sectionHead, rows = i + 1, cols = 1:5, gridExpand = F)
}
##Column Width and Row width
setColWidths(wb, sheet = "paperEnglish", cols = 2, widths = 75)
saveWorkbook(wb, "output.xlsx", overwrite = T)
saveWorkbook(wb, "output.xlsx", overwrite = T)
